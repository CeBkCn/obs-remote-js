/*!
 * OBS Remote JS API v1.0.0 (https://github.com/nodecg/obs-remote-js)
 * Copyright 2014 Matthew McNamara <matt@mattmcn.com>
 * Licensed under MIT (https://github.com/nodecg/obs-remote-js/blob/master/LICENSE)
 */
!function(){"use strict";function a(a,b,c,d,e,f){this.width=a||0,this.height=b||0,this.x=c||0,this.y=d||0,this.name=e||"",this.rendered=f||!1}"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports.OBSSource=a:window.OBSSource=a}(),function(){"use strict";function a(a,b){this.name=a||"",this.sources=b||[]}"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports.OBSScene=a:window.OBSScene=a}(),function(){"use strict";function a(){Object.defineProperty(this,"apiVersion",{value:1.1,writable:!1}),this._connected=!1,this._socket=void 0,this._messageCounter=0,this._responseCallbacks={},this._auth={salt:"",challenge:""}}function b(a,b){var c=d(a),g=d(this._auth.salt),h=e(c+g),j=this;i.subtle.digest("SHA-256",h).then(function(a){var c=d(f(a)),g=d(j._auth.challenge),h=e(c+g);i.subtle.digest("SHA-256",h).then(function(a){var c=f(a);b(c)})})}function c(a,b){var c=d(a),e=d(this._auth.salt),f=CryptoJS.SHA256(c+e).toString(CryptoJS.enc.Base64),g=d(f),h=d(this._auth.challenge),i=CryptoJS.SHA256(g+h).toString(CryptoJS.enc.Base64);b(i)}function d(a){return unescape(encodeURIComponent(a))}function e(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++)b[c]=a.charCodeAt(c);return b.buffer}function f(a){for(var b,c,d,e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",f="",g=new Uint8Array(a),h=8*a.byteLength,i=0;h>i;i+=6)b=i/8|0,c=i%8,d=(g[b]||0)<<c>>2,c>2&&(d|=(g[b+1]||0)>>10-c),f+=e.charAt(63&d);return f+=4==c?"=":6==c?"==":""}function g(a){var b=a.name,c=[];return a.sources.forEach(function(a){c.push(h(a))}),new OBSScene(b,c)}function h(a){return new OBSSource(a.cx,a.cy,a.x,a.y,a.name,a.render)}var i=window.crypto||window.msCrypto||{};if(a.prototype._authHash=b,"undefined"==typeof i.subtle)if("undefined"==typeof i.webkitSubtle){if("undefined"==typeof CryptoJS)throw new Error("OBS Remote requires CryptoJS when native crypto is not available!");a.prototype._authHash=c}else i.subtle=i.webkitSubtle;Object.defineProperty(a,"DEFAULT_PORT",{value:4444,writable:!1}),Object.defineProperty(a,"WS_PROTOCOL",{value:"obsapi",writable:!1}),a.prototype.connect=function(b,c){c="undefined"==typeof c?"":c,b="undefined"==typeof b||""===b?"localhost":b;var d=b.indexOf(":");(0>d||d===b.length-1)&&(b+=":"+a.DEFAULT_PORT),this._connected&&(this._socket.close(),this._connected=!1),this._socket=new WebSocket("ws://"+b,a.WS_PROTOCOL);var e=this;this._socket.onopen=function(){e._connected=!0,e.onConnectionOpened(),e.isAuthRequired(function(a){a&&e.authenticate(c)})},this._socket.onclose=function(){e.onConnectionClosed(),e._connected=!1},this._socket.onerror=function(){e.onConnectionFailed(),e._connected=!1},this._socket.onmessage=function(a){e._messageReceived(a)}},a.prototype.authenticate=function(a){var b=this;this._authHash(a,function(a){function c(a){var c="ok"===a.status,d=0;c?b.onAuthenticationSucceeded():(d=a.error.substr(43),b.onAuthenticationFailed(d))}b._sendMessage("Authenticate",{auth:a},c)})},a.prototype.toggleStream=function(a){a="undefined"==typeof a?!1:a,this._sendMessage("StartStopStreaming",{"preview-only":a})},a.prototype.getVersion=function(a){function b(b){a(b.version)}this._sendMessage("GetVersion",b)},a.prototype.isAuthRequired=function(a){function b(b){var d=b.authRequired;d&&(c._auth.salt=b.salt,c._auth.challenge=b.challenge),a(d)}var c=this;this._sendMessage("GetAuthRequired",b)},a.prototype.getSceneList=function(a){function b(b){var c=b["current-scene"],d=[];b.scenes.forEach(function(a){g(a)}),a(c,d)}this._sendMessage("GetSceneList",b)},a.prototype.getCurrentScene=function(a){function b(b){var c=g(b);a(c)}this._sendMessage("GetCurrentScene",b)},a.prototype.setCurrentScene=function(a){this._sendMessage("SetCurrentScene",{"scene-name":a})},a.prototype.setSourcesOrder=function(a){var b=a;"OBSSource"==typeof a[1]&&(b=[],a.forEach(function(a){b.push(a.name)})),this._sendMessage("SetSourcesOrder",{"scene-names":b})},a.prototype.setSourceRender=function(a,b){this._sendMessage("SetSourceRender",{source:a,render:b})},a.prototype.getStreamingStatus=function(a){function b(b){a(b.streaming,b["preview-only"])}this._sendMessage("GetStreamingStatus",b)},a.prototype.getVolumes=function(a){function b(b){a(b["mic-volume"],b["mic-muted"],b["desktop-volume"],b["desktop-muted"])}this._sendMessage("GetVolumes",b)},a.prototype.setMicrophoneVolume=function(a,b){b="undefined"==typeof b?!1:b,this._sendMessage("SetVolume",{channel:"microphone",volume:a,"final":!b})},a.prototype.toggleMicrophoneMute=function(){this._sendMessage("ToggleMute",{channel:"microphone"})},a.prototype.setDesktopVolume=function(a,b){b="undefined"==typeof b?!1:b,this._sendMessage("SetVolume",{channel:"desktop",volume:a,"final":!b})},a.prototype.toggleDesktopMute=function(){this._sendMessage("ToggleMute",{channel:"desktop"})},a.prototype.onConnectionOpened=function(){},a.prototype.onConnectionClosed=function(){},a.prototype.onConnectionFailed=function(){},a.prototype.onStreamStarted=function(){},a.prototype.onStreamStopped=function(){},a.prototype.onSceneSwitched=function(){},a.prototype.onAuthenticationSucceeded=function(){},a.prototype.onAuthenticationFailed=function(){},a.prototype._sendMessage=function(a,b,c){if(this._connected){var d=this._getNextMsgId();"function"==typeof b&&(c=b,b={}),b="undefined"==typeof b?{}:b,c="undefined"==typeof c?function(){}:c,this._responseCallbacks[d]=c,b["message-id"]=d,b["request-type"]=a;var e=JSON.stringify(b);this._socket.send(e)}},a.prototype._getNextMsgId=function(){return this._messageCounter+=1,this._messageCounter+""},a.prototype._messageReceived=function(a){var b=JSON.parse(a.data);if(b){var c=b["update-type"];if(c)switch(c){case"StreamStarting":this._onStreamStarting(b);break;case"StreamStopping":this._onStreamStopping(b);break;case"SwitchScenes":this.onSceneSwitched(b["scene-name"]);break;default:console.warn("[OBSRemote] Unknown OBS update type: "+c)}else{var d=b["message-id"];"error"===b.status&&console.error("[OBSRemote] Error:",b.error);var e=this._responseCallbacks[d];e(b),delete this._responseCallbacks[d]}}},a.prototype._onStreamStarting=function(a){var b=a["preview-only"];this.onStreamStarted(b)},a.prototype._onStreamStopping=function(a){var b=a["preview-only"];this.onStreamStopped(b)},"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=a:window.OBSRemote=a}();